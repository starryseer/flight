{"version":3,"sources":["..\\..\\..\\..\\..\\..\\assets\\script\\home\\prefab/assets\\script\\home\\prefab\\useFrame.js"],"names":["cc","Class","extends","Component","properties","bg","default","type","Node","tooltip","slide","Slider","itemSprite","Sprite","itemAtlas","SpriteAtlas","nameLab","Label","numLab","id","Integer","maxNum","onLoad","global","FitHelper","onEnable","node","on","init","start","onSlide","data","itemData","items","config","configConf","string","oldSize","width","spriteFrame","getSpriteFrame","newSize","scale","event","num","Math","round","progress","onPlusClick","target","parseInt","onMinusClick","onSubmitClick","param","userData","token","HttpHelper","httpPost","urlConf","item_consume","rsp","code","clientAttrData","initClientAttrData","clientAttr","update","consume","systemEvent","emit","index","get","show","destroy","onCloseClick"],"mappings":"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","file":"useFrame.js","sourceRoot":"..\\..\\..\\..\\..\\..\\assets\\script\\home\\prefab","sourcesContent":["import global from './../../global/global';\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        bg:{\r\n            default: null,\r\n            type: cc.Node,\r\n            tooltip: '背景'\r\n        },\r\n        slide:{\r\n            default: null,\r\n            type: cc.Slider,\r\n            tooltip: '滑动条'\r\n        },\r\n        itemSprite:{\r\n            default: null,\r\n            type: cc.Sprite,\r\n            tooltip: '图标'\r\n        },\r\n        itemAtlas:{\r\n            default: null,\r\n            type: cc.SpriteAtlas,\r\n            tooltip: '道具plist'\r\n        },\r\n        nameLab:{\r\n            default: null,\r\n            type: cc.Label,\r\n            tooltip: '名字'\r\n        },\r\n        numLab:{\r\n            default: null,\r\n            type: cc.Label,\r\n            tooltip: '数量'\r\n        },\r\n        id:{\r\n            default: 0,\r\n            type: cc.Integer,\r\n            tooltip: 'id'\r\n        },\r\n        maxNum:{\r\n            default: 0,\r\n            type: cc.Integer,\r\n            tooltip: '最大数量'\r\n        },\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    onLoad () {\r\n        global.FitHelper.onEnable(this.bg);\r\n        this.node.on('init',this.init,this);\r\n    },\r\n\r\n    start () {\r\n        if(this.slide == null){\r\n            return;\r\n        }\r\n\r\n        this.slide.node.on('slide', this.onSlide, this);\r\n    },\r\n\r\n    init(data)\r\n    {\r\n        var data = global.itemData.items[data['id']];\r\n        var config = global.configConf['item'][data['item_id']];\r\n        this.maxNum = data['num'] >99?99:data['num'];\r\n        this.id = data['id'];\r\n        this.numLab.string = this.maxNum;\r\n        this.nameLab.string = config['name'];\r\n        var oldSize = this.itemSprite.node.width;\r\n        this.itemSprite.spriteFrame = this.itemAtlas.getSpriteFrame(config['image']);\r\n        var newSize = this.itemSprite.node.width;\r\n        this.itemSprite.node.scale = oldSize/newSize;\r\n    },\r\n\r\n    onSlide(event){\r\n        var num = Math.round(this.slide.progress*this.maxNum);\r\n        this.numLab.string = num;\r\n        this.slide.progress = num/this.maxNum;\r\n    },\r\n\r\n    onPlusClick(target,data)\r\n    {\r\n        this.numLab.string = (parseInt(this.numLab.string) < this.maxNum)?(parseInt(this.numLab.string)+1):this.maxNum;\r\n        this.slide.progress = parseInt(this.numLab.string)/this.maxNum;\r\n    },\r\n\r\n    onMinusClick(target,data)\r\n    {\r\n        this.numLab.string = (parseInt(this.numLab.string) > 0)?(parseInt(this.numLab.string)-1):0;\r\n        this.slide.progress = parseInt(this.numLab.string)/this.maxNum;\r\n    },\r\n\r\n    onSubmitClick(target,data){\r\n        if(parseInt(this.numLab.string) == 0)\r\n            return;\r\n        \r\n        var param = {'id':this.id,'num':parseInt(this.numLab.string),'userId':global.userData.id,'token':global.userData.token};\r\n        global.HttpHelper.httpPost(global.urlConf.item_consume,param,(rsp)=>{\r\n            if(rsp == -1)\r\n            {\r\n                return;\r\n            }\r\n\r\n            if(rsp.code == 200)\r\n            {\r\n                global.clientAttrData.initClientAttrData(rsp.data.clientAttr);\r\n                global.itemData.update([rsp.data.consume]);\r\n                cc.systemEvent.emit('updateItems',rsp.data.consume);\r\n                for(var index in rsp.data.get)\r\n                {\r\n                    global.itemData.update([rsp.data.get[index]]);\r\n                    cc.systemEvent.emit('updateItems',rsp.data.get[index]);\r\n                }\r\n                cc.systemEvent.emit('useConfirm',{'show':rsp.data.show});\r\n                this.node.destroy();\r\n            }\r\n            else\r\n            {\r\n                return;\r\n            }\r\n        });\r\n\r\n    },\r\n\r\n    onCloseClick(target,data)\r\n    {\r\n        this.node.destroy();\r\n    }\r\n\r\n    // update (dt) {},\r\n});\r\n"]}