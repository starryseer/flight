{"version":3,"sources":["..\\..\\..\\..\\..\\assets\\script\\home/assets\\script\\home\\home.js"],"names":["cc","Class","extends","Component","properties","onLoad","loadConfig","initCollision","initPhysics","loader","loadResDir","err","dir","i","length","loadRes","name","trim","error","json","global","configConf","manager","director","getCollisionManager","enabled","getPhysicsManager","gravity","v2"],"mappings":";;;;;;AAAA;;;;;;AAEAA,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY,EAHP;;AAOL;;AAEAC,UATK,oBASK;AACN,aAAKC,UAAL;AACA,aAAKC,aAAL;AACA,aAAKC,WAAL;AACH,KAbI;AAeLF,cAfK,wBAeO;AACRN,WAAGS,MAAH,CAAUC,UAAV,CAAqB,QAArB,EAA+B,UAACC,GAAD,EAAMC,GAAN,EAAa;AACxC,gBAAGD,GAAH,EACI;AACJ,iBAAI,IAAIE,IAAE,CAAV,EAAYA,IAAED,IAAIE,MAAlB,EAAyBD,GAAzB,EACA;AACIb,mBAAGS,MAAH,CAAUM,OAAV,CAAkB,YAAYH,IAAIC,CAAJ,EAAOG,IAAP,CAAYC,IAAZ,EAAZ,GAAiC,OAAnD,EAA2D,UAACC,KAAD,EAAOC,IAAP,EAAc;AACrEC,qCAAOC,UAAP,CAAkBF,KAAKH,IAAvB,IAA+BG,KAAKA,IAApC;AACH,iBAFD;AAGH;AACJ,SATD;AAUH,KA1BI;AA4BLZ,iBA5BK,2BA4BU;AACX,YAAIe,UAAUtB,GAAGuB,QAAH,CAAYC,mBAAZ,EAAd;AACAF,gBAAQG,OAAR,GAAkB,IAAlB;AACH,KA/BI;AAiCLjB,eAjCK,yBAiCQ;AACT,YAAIc,UAAUtB,GAAGuB,QAAH,CAAYG,iBAAZ,EAAd;AACAJ,gBAAQG,OAAR,GAAkB,IAAlB;AACAH,gBAAQK,OAAR,GAAkB3B,GAAG4B,EAAH,CAAM,CAAN,EAAQ,CAAR,CAAlB;AACA;AACH;AAtCI;;AAyCL;AAzCJ","file":"home.js","sourceRoot":"..\\..\\..\\..\\..\\assets\\script\\home","sourcesContent":["import global from \"../global/global\";\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    onLoad () {\n        this.loadConfig();\n        this.initCollision();\n        this.initPhysics();\n    },\n\n    loadConfig(){\n        cc.loader.loadResDir(\"config\", (err, dir)=> {\n            if(err)\n                return;\n            for(let i=0;i<dir.length;i++)\n            {\n                cc.loader.loadRes('config/' + dir[i].name.trim() + '.json',(error,json)=>{\n                    global.configConf[json.name] = json.json;\n                });\n            } \n        }); \n    },\n\n    initCollision(){\n        var manager = cc.director.getCollisionManager();\n        manager.enabled = true;\n    },\n\n    initPhysics(){\n        var manager = cc.director.getPhysicsManager();\n        manager.enabled = true;\n        manager.gravity = cc.v2(0,0);\n        // manager.enabledDebugDraw = true;\n    },\n    \n\n    // update (dt) {},\n});\n"]}