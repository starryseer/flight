{"version":3,"sources":["HttpHelper.js"],"names":["Http","cc","Class","extends","Component","statics","properties","httpGet","url","callback","xhr","loader","getXMLHttpRequest","onreadystatechange","readyState","status","respone","responseText","rsp","JSON","parse","withCredentials","open","setRequestHeader","timeout","send","httpPost","params","stringify","replace","console","log","XMLHttpRequest","response","httpPostLogin","accountLoginUrl","loginUrl","account","password","userId","data","user","id","token","res","bind","HttpHelper"],"mappings":"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","file":"HttpHelper.js","sourceRoot":"..\\..\\..\\..\\..\\assets\\script\\helper","sourcesContent":["/**\r\n * Http 请求封装\r\n */\r\nconst Http = cc.Class({\r\n    extends: cc.Component,\r\n \r\n    statics: {\r\n    },\r\n \r\n    properties: {\r\n \r\n    },\r\n \r\n    /**\r\n     * get请求\r\n     * @param {string} url \r\n     * @param {function} callback \r\n     */\r\n    httpGet(url, callback) {\r\n        // cc.myGame.gameUi.onShowLockScreen();\r\n        let xhr = cc.loader.getXMLHttpRequest();\r\n        xhr.onreadystatechange = function () {\r\n            // cc.log(\"Get: readyState:\" + xhr.readyState + \" status:\" + xhr.status);\r\n            if (xhr.readyState === 4 && xhr.status == 200) {\r\n                let respone = xhr.responseText;\r\n                let rsp = JSON.parse(respone);\r\n                // cc.myGame.gameUi.onHideLockScreen();\r\n                callback(rsp);\r\n            } else if (xhr.readyState === 4 && xhr.status == 401) {\r\n                // cc.myGame.gameUi.onHideLockScreen();\r\n                callback({status:401});\r\n            } else {\r\n                //callback(-1);\r\n            }\r\n \r\n \r\n        };\r\n        xhr.withCredentials = true;\r\n        xhr.open('GET', url, true);\r\n \r\n        // if (cc.sys.isNative) {\r\n        xhr.setRequestHeader('Access-Control-Allow-Origin', '*');\r\n        xhr.setRequestHeader('Access-Control-Allow-Methods', 'GET, POST');\r\n        xhr.setRequestHeader('Access-Control-Allow-Headers', 'x-requested-with,content-type,authorization');\r\n        xhr.setRequestHeader(\"Content-Type\", \"application/json\");\r\n        xhr.setRequestHeader('Authorization', 'Bearer ' /*+ cc.myGame.gameManager.getToken()*/);\r\n        // xhr.setRequestHeader('Authorization', 'Bearer ' + \"\");\r\n        // }\r\n \r\n        // note: In Internet Explorer, the timeout property may be set only after calling the open()\r\n        // method and before calling the send() method.\r\n        xhr.timeout = 8000;// 8 seconds for timeout\r\n \r\n        xhr.send();\r\n    },\r\n \r\n    /**\r\n     * post请求\r\n     * @param {string} url \r\n     * @param {object} params \r\n     * @param {function} callback \r\n     */\r\n    httpPost(url, params, callback) {\r\n//        console.log(JSON.stringify(params));\r\n        params = JSON.stringify(params).replace(/{/g, '');\r\n        params = params.replace(/}/g, '');\r\n        params = params.replace(/\"/g, '');\r\n        params = params.replace(/'/g, '');\r\n        params = params.replace(/:/g, '=');\r\n        params = params.replace(/,/g, '&');\r\n        console.log(params)\r\n        // cc.myGame.gameUi.onShowLockScreen();\r\n        let xhr = new XMLHttpRequest();\r\n        xhr.onreadystatechange = function () {\r\n            // cc.log('xhr.readyState=' + xhr.readyState + '  xhr.status=' + xhr.status);\r\n            if (xhr.readyState === 4) {\r\n                if(xhr.status == 200)\r\n                {\r\n                    let response = xhr.responseText;\r\n                    let rsp = JSON.parse(response);\r\n                    cc.log(rsp);\r\n                    // cc.myGame.gameUi.onHideLockScreen();\r\n                    callback(rsp);\r\n                }\r\n                else\r\n                {\r\n                    callback(-1);\r\n                }\r\n            } \r\n        };\r\n        xhr.open('POST', url, true);\r\n        // if (cc.sys.isNative) {\r\n        // xhr.setRequestHeader('Access-Control-Allow-Origin', '*');\r\n        // xhr.setRequestHeader('Access-Control-Allow-Methods', 'GET, POST');\r\n        // xhr.setRequestHeader('Access-Control-Allow-Headers', 'x-requested-with,content-type');\r\n        // xhr.setRequestHeader(\"Content-Type\", \"application/json\");\r\n        xhr.setRequestHeader(\"Content-Type\", \"application/x-www-form-urlencoded; charset=UTF-8\");\r\n        // xhr.setRequestHeader('Authorization', 'Bearer '/* + cc.myGame.gameManager.getToken()*/);\r\n        // }\r\n \r\n        // note: In Internet Explorer, the timeout property may be set only after calling the open()\r\n        // method and before calling the send() method.\r\n        xhr.timeout = 8000;// 8 seconds for timeout\r\n        \r\n        xhr.send(params);\r\n    },\r\n \r\n    /**\r\n     * 登录\r\n     * @param {string} accountLoginUrl\r\n     * @param {string} loginUrl\r\n     * @param {object} params \r\n     * @param {function} callback \r\n     * @param {string} account \r\n     * @param {string} password \r\n     */\r\n    httpPostLogin(accountLoginUrl, loginUrl, params, callback, account, password) {\r\n        this.httpPost(accountLoginUrl,params,function(response){\r\n            if(response != -1) {\r\n                this.httpPost(loginUrl, {\r\n                    userId: response.data.user.id,\r\n                    token: response.data.user.token \r\n                }, function(res){\r\n                    console.log(res);\r\n                    \r\n                }.bind(this))\r\n\r\n            }\r\n            \r\n            \r\n        }.bind(this))\r\n \r\n    },\r\n\r\n    // /**\r\n    //  * 登录专用\r\n    //  * @param {string} url\r\n    //  * @param {object} params \r\n    //  * @param {function} callback \r\n    //  * @param {string} account \r\n    //  * @param {string} password \r\n    //  */\r\n    // httpPostLogin(url, params, callback, account, password) {\r\n    //     // cc.myGame.gameUi.onShowLockScreen();\r\n    //     let xhr = cc.loader.getXMLHttpRequest();\r\n    //     xhr.onreadystatechange = function () {\r\n    //         // cc.log('xhr.readyState=' + xhr.readyState + '  xhr.status=' + xhr.status);\r\n    //         if (xhr.readyState === 4 && xhr.status == 200) {\r\n    //             let respone = xhr.responseText;\r\n    //             let rsp = JSON.parse(respone);\r\n    //             // cc.myGame.gameUi.onHideLockScreen();\r\n    //                 callback(rsp);\r\n    //             } else {\r\n    //             callback(-1);\r\n    //         }\r\n    //     };\r\n    //     xhr.open('POST', url, true);\r\n    //     xhr.setRequestHeader('Access-Control-Allow-Origin', '*');\r\n    //     xhr.setRequestHeader('Access-Control-Allow-Methods', 'GET, POST');\r\n    //     xhr.setRequestHeader('Access-Control-Allow-Headers', 'x-requested-with,content-type');\r\n    //     xhr.setRequestHeader(\"Content-Type\", \"application/json\");\r\n    //     let str = account + \"@\" + password;\r\n    //     xhr.setRequestHeader('Authorization', 'Basic' + ' ' + window.btoa(str));\r\n \r\n    //     xhr.timeout = 8000;// 8 seconds for timeout\r\n \r\n    //     xhr.send(JSON.stringify(params));\r\n \r\n    // }\r\n});\r\nconst HttpHelper = new Http();\r\nexport default HttpHelper;"]}